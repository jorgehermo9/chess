{"version":3,"sources":["components/Board/Cells/Cell.module.css","components/Board/Board.module.css","components/Board/boardUtils.js","components/Board/Cells/Cell.jsx","components/Board/Board.jsx","components/App.jsx","index.js"],"names":["module","exports","createCell","i","j","pos","piece","createBoard","n","board","cells","push","newBoard","setPiece","setupBoard","type","color","isValidMove","move","validMoves","moves","filter","target","expand","direction","starting","count","cell","getMoves","facing","startVertical","doublemove","forEach","enemy","pawnMoves","knightMoves","kingMoves","queenMoves","bishopMoves","rookMoves","getImage","Cell","props","cellStyle","backgroundColor","className","styles","style","id","onClick","onSelected","pieceContainer","validMove","notValidMove","src","alt","Board","handleClick","selected","turn","myColor","length","setSelected","setMoves","some","setBoard","prev","selectedCell","targetCell","socket","emit","close","setWon","setTurn","useState","useEffect","on","who","auxCells","slice","reverse","map","index","App","won","setColor","setSocket","errMsg","setMsg","clientSocket","io","winner","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a990f629.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__gTdPA\",\"piece\":\"Cell_piece__dk1Hx\",\"pieceContainer\":\"Cell_pieceContainer__3zyC3\",\"notValidMove\":\"Cell_notValidMove__zf5S6\",\"validMove\":\"Cell_validMove__2RTPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__1Y7VT\"};","function createCell(i,j){\n\treturn {pos:{i:i,j:j}\n\t\t\t\t\t,piece: null };\n}\n\nexport function createBoard(n){\n\tconst board={n:n,cells:[]};\n\tfor(let i=0;i<n;i++){\n\t\tfor(let j =0;j<n;j++){\n\t\t\tboard.cells.push(createCell(i,j));\n\t\t}\n\t}\n\tconst settedBoard = setupBoard(board);\n\treturn settedBoard;\n}\nfunction setPiece(board,type,color,i,j){\n\tconst cell= board.cells[j + i*board.n];\n\tcell.piece = {color:color,type:type};\n}\nfunction setupBoard(board){\n\tconst newBoard = board;\n\tsetPiece(newBoard,\"R\",\"black\",0,0);\n\tsetPiece(newBoard,\"N\",\"black\",0,1);\n\tsetPiece(newBoard,\"B\",\"black\",0,2);\n\tsetPiece(newBoard,\"Q\",\"black\",0,3);\n\tsetPiece(newBoard,\"K\",\"black\",0,4);\n\tsetPiece(newBoard,\"B\",\"black\",0,5);\n\tsetPiece(newBoard,\"N\",\"black\",0,6);\n\tsetPiece(newBoard,\"R\",\"black\",0,7);\n\tsetPiece(newBoard,\"P\",\"black\",1,0);\n\tsetPiece(newBoard,\"P\",\"black\",1,1);\n\tsetPiece(newBoard,\"P\",\"black\",1,2);\n\tsetPiece(newBoard,\"P\",\"black\",1,3);\n\tsetPiece(newBoard,\"P\",\"black\",1,4);\n\tsetPiece(newBoard,\"P\",\"black\",1,5);\n\tsetPiece(newBoard,\"P\",\"black\",1,6);\n\tsetPiece(newBoard,\"P\",\"black\",1,7);\t\n\t\n\tsetPiece(newBoard,\"R\",\"white\",7,0);\n\tsetPiece(newBoard,\"N\",\"white\",7,1);\n\tsetPiece(newBoard,\"B\",\"white\",7,2);\n\tsetPiece(newBoard,\"Q\",\"white\",7,3);\n\tsetPiece(newBoard,\"K\",\"white\",7,4);\n\tsetPiece(newBoard,\"B\",\"white\",7,5);\n\tsetPiece(newBoard,\"N\",\"white\",7,6);\n\tsetPiece(newBoard,\"R\",\"white\",7,7);\n\tsetPiece(newBoard,\"P\",\"white\",6,0);\n\tsetPiece(newBoard,\"P\",\"white\",6,1);\n\tsetPiece(newBoard,\"P\",\"white\",6,2);\n\tsetPiece(newBoard,\"P\",\"white\",6,3);\n\tsetPiece(newBoard,\"P\",\"white\",6,4);\n\tsetPiece(newBoard,\"P\",\"white\",6,5);\n\tsetPiece(newBoard,\"P\",\"white\",6,6);\n\tsetPiece(newBoard,\"P\",\"white\",6,7);\n\n\treturn newBoard;\n}\n\nfunction isValidMove(board,move){\n\treturn move.i >=0 && move.i < board.n && move.j >=0 && move.j<board.n;\n}\nfunction validMoves(board,color,moves){\n\treturn moves.filter(move =>{\n\t\tconst target = move.j+move.i*board.n;\n\t\treturn (\n\t\t\tisValidMove(board,move) &&\n\t\t\t(board.cells[target].piece ===null || board.cells[target].piece.color !== color)\n\t\t);\n\t})\n}\nfunction pawnMoves(board,{i,j},color){\n\tconst facing = color === \"black\"?1:-1;\n\tconst startVertical = color===\"black\"?1:6;\n\tconst moves =[];\n\tconst enemies = [{i:i+facing,j:j-1},{i:i+facing,j:j+1}];\n\tlet move = {i:i+facing,j:j};\n\tlet doublemove = {i:i+2*facing,j:j};\n\n\tenemies.forEach( enemy => {\n\t\tif(isValidMove(board,enemy) && \n\t\t(board.cells[enemy.j + enemy.i*board.n].piece&&board.cells[enemy.j + enemy.i*board.n].piece.color!==color )){\n\t\t\tmoves.push(enemy);\n\t\t}\n\t})\n\n\tif(isValidMove(board,move)&&(board.cells[move.j + move.i*board.n].piece===null)){\n\t\t\tmoves.push(move);\n\t\t\tif(i ===startVertical && \n\t\t\t\tisValidMove(board,doublemove)&&(board.cells[doublemove.j + doublemove.i*board.n].piece===null)){\n\t\t\t\tmoves.push(doublemove);\n\t\t\t}\n\t\t}\n\treturn validMoves(board,color,moves);\n}\nfunction knightMoves(board,{i,j},color){\n\tconst moves =[\n\t\t{i:i+2,j:j-1},\n\t\t{i:i+2,j:j+1},\n\t\t{i:i-2,j:j-1},\n\t\t{i:i-2,j:j+1},\n\t\t{i:i+1,j:j-2},\n\t\t{i:i-1,j:j-2},\n\t\t{i:i+1,j:j+2},\n\t\t{i:i-1,j:j+2}\n\t];\n\treturn validMoves(board,color,moves);\n}\nfunction kingMoves(board,{i,j},color){\n\tconst moves = [\n\t\t{i:i+1,j:j},\n\t\t{i:i-1,j:j},\n\t\t{i:i,j:j+1},\n\t\t{i:i,j:j-1},\n\t\t{i:i-1,j:j-1},\n\t\t{i:i-1,j:j+1},\n\t\t{i:i+1,j:j-1},\n\t\t{i:i+1,j:j+1},\n\t];\n\treturn validMoves(board,color,moves);\n}\nfunction expand(board,direction,starting){\n\tlet moves=[];\n\tlet count =1;\n\tlet cell = {i:starting.i + direction.i,j:starting.j+direction.j};\n\twhile(isValidMove(board,cell) && board.cells[cell.j+cell.i*board.n].piece ===null){\n\t\tmoves.push(cell);\n\t\tcount++;\n\t\tcell = {i:starting.i+direction.i*count,j:starting.j+direction.j*count};\n\t}\n\tmoves.push(cell)//Add last cell as target cell\n\treturn moves;\n}\nfunction queenMoves(board,starting,color){\n\tlet moves=[];\n\tmoves = [...moves,...expand(board,{i:1,j:0},starting)];\n\tmoves = [...moves,...expand(board,{i:-1,j:0},starting)];\n\tmoves = [...moves,...expand(board,{i:0,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:0,j:-1},starting)];\n\n\tmoves = [...moves,...expand(board,{i:-1,j:-1},starting)];\n\tmoves = [...moves,...expand(board,{i:-1,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:1,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:1,j:-1},starting)];\n\treturn validMoves(board,color,moves);\n}\nfunction bishopMoves(board,starting,color){\n\tlet moves = [];\n\n\tmoves = [...moves,...expand(board,{i:-1,j:-1},starting)];\n\tmoves = [...moves,...expand(board,{i:-1,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:1,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:1,j:-1},starting)];\n\treturn validMoves(board,color,moves);\n}\n\nfunction rookMoves(board,starting,color){\n\tlet moves =[];\n\tmoves = [...moves,...expand(board,{i:1,j:0},starting)];\n\tmoves = [...moves,...expand(board,{i:-1,j:0},starting)];\n\tmoves = [...moves,...expand(board,{i:0,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:0,j:-1},starting)];\n\treturn validMoves(board,color,moves);\n}\nexport function getMoves(board,{pos,piece}){\n\tlet moves= [];\n\tswitch (piece.type) {\n\t\tcase \"P\":\n\t\t\tmoves = pawnMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"N\":\n\t\t\tmoves = knightMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"K\":\n\t\t\tmoves = kingMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"Q\":\n\t\t\tmoves = queenMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"B\":\n\t\t\tmoves = bishopMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"R\":\n\t\t\tmoves = rookMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\t\t\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn moves;\n}\n\nexport function getImage(piece){\n\tlet type;\n\tswitch(piece.type){\n\t\tcase \"P\":\n\t\t\ttype = \"pawn\";\n\t\t\tbreak;\n\t\tcase \"N\":\n\t\t\ttype = \"knight\";\n\t\t\tbreak;\n\t\tcase \"K\":\n\t\t\ttype = \"king\";\n\t\t\tbreak;\n\t\tcase \"Q\":\n\t\t\ttype = \"queen\";\n\t\t\tbreak;\n\t\tcase \"B\":\n\t\t\ttype = \"bishop\";\n\t\t\tbreak;\n\t\tcase \"R\":\n\t\t\ttype = \"rook\";\n\t\t\tbreak;\n\t\t\t\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\tlet url = `/assets/chess/${piece.color}_${type}.svg`;\n\treturn url\n}\n\n","import React from \"react\";\nimport { getImage } from \"../boardUtils\";\nimport styles from \"./Cell.module.css\"\n\nfunction Cell(props){\n\tconst white = (props.pos.i+props.pos.j) % 2 === 0;\n\tconst cellStyle={\n\t\tbackgroundColor: white?\"#787878\":\"#2b2b2b\",\n\t}\n\treturn(\n\t\t<div \n\t\t\tkey={props.pos.j+props.pos.i*props.n}\n\t\t\tclassName={styles.cell}\n\t\t\tstyle={cellStyle} \n\t\t\tid={`cell${props.pos.i}${props.pos.j}`}\n\t\t\tonClick={\n\t\t\t\t()=>props.onSelected({pos:props.pos,piece:props.piece})}\n\t\t>\n\t\t\t<div className={`${styles.pieceContainer} ${props.validMove?styles.validMove:styles.notValidMove}`}>\n\t\t\t\t{props.piece!==null && <img src={getImage(props.piece)}  alt=\"piece\"\n\t\t\t\tclassName={styles.piece}/>}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nexport default Cell;","import React, { useEffect, useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\"\nimport {createBoard,getMoves} from \"./boardUtils\"\n\n\nfunction Board(props){\n\tfunction inverse(color){\n\t\treturn color ===\"white\"?\"black\":\"white\";\n\t}\n\tfunction handleClick(target){\n\n\t\tif(selected === null){\n\t\t\tif(target.piece !==null && target.piece.color === turn && turn ===props.myColor){\n\t\t\t\tconst moves = getMoves(board,target);\n\t\t\t\tif(moves.length >0){\n\t\t\t\t\tsetSelected(target);\n\t\t\t\t\tsetMoves(getMoves(board,target));\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tif(validMoves.some(move => move.i === target.pos.i && move.j === target.pos.j)){\n\n\t\t\t\tsetBoard(prev =>{\n\t\t\t\t\tconst newBoard = prev;\n\t\t\t\t\tconst selectedCell = selected.pos.j+selected.pos.i*prev.n;\n\t\t\t\t\tconst targetCell = target.pos.j+target.pos.i*prev.n;\n\t\t\t\t\tnewBoard.cells[targetCell].piece = prev.cells[selectedCell].piece;\n\t\t\t\t\tnewBoard.cells[selectedCell].piece = null;\n\t\t\t\t\tprops.socket.emit(\"move\",newBoard);\n\t\t\t\t\treturn newBoard;\n\t\t\t\t});\n\t\t\t\tif(target.piece && target.piece.type===\"K\"){\n\t\t\t\t\tprops.socket.emit(\"won\",turn)\n\t\t\t\t\tprops.socket.close();\n\t\t\t\t\tprops.setWon(turn);\n\t\t\t\t}\n\t\t\t\tsetTurn(inverse(turn));\n\t\t\t}\n\t\t\tsetSelected(null);\n\t\t\tsetMoves([]);\n\t\t}\n\t}\n\tconst n =8;\n\tconst [board,setBoard] = useState(createBoard(n));\n\tconst [selected,setSelected] = useState(null);\n\tconst [validMoves,setMoves] = useState([]);\n\tconst turn =props.turn;\n\tconst setTurn = props.setTurn;\n\n\tuseEffect(()=>{\n\t\tprops.socket.on(\"move\", board => {\n\t\t\tsetBoard(board);\n\t\t\tsetTurn(props.myColor);\n\t\t})\n\t\tprops.socket.on(\"won\", who => {\n\t\t\tprops.socket.close();\n\t\t\tprops.setWon(who)}\n\t\t);\n\t})\n\tlet auxCells = props.myColor===\"black\"?board.cells.slice().reverse():board.cells;\n\treturn (\n\t\t<div className={styles.board}>\n\t\t\t{auxCells.map((cell,index) =>\n\t\t\t<Cell \n\t\t\tkey ={index}\n\t\t\tn={board.n}\n\t\t\tpos={cell.pos} \n\t\t\tpiece={cell.piece}\n\t\t\tvalidMove={validMoves.some((move) => \n\t\t\t\t\t\t\t\tmove.i === cell.pos.i && move.j===cell.pos.j )}\n\t\t\tonSelected={handleClick}\n\t\t\t/>)}\n\t\t</div>\n\t)\n}\n\n\nexport default Board;","import React,{useState} from \"react\";\nimport io from \"socket.io-client\"\nimport Board from \"./Board/Board\"\n\n\nfunction App(){\n\tconst reset = ()=>{\n\t\tsetWon(\"none\");\n\t\tsocket.close();\n\t\tsetSocket(null);\n\t\tsetColor(null);\n\t\tsetMsg(null);//Reset error message\n\t}\n\n\n\tconst api = \"https://chess-io-mp.herokuapp.com/\"\n\t//const api = \"localhost:3001\"\n\n\tconst [turn,setTurn] = useState(\"white\");\n\tconst [won,setWon] = useState(\"none\");\n\tconst [myColor,setColor] = useState(null);\n\tconst [socket,setSocket] = useState(null);\n\tconst [errMsg,setMsg] = useState(null);\n\tif(socket===null){\n\t\tconst clientSocket =io(api);\n\t\tclientSocket.on(\"found\",color => {\n\t\t\tsetColor(color);\n\t\t});\n\t\tclientSocket.on(\"rival dc\",winner=>{//If someone won, both socket are close in Board component\n\t\t\tsetMsg(\"Rival disconnected\")\n\t\t\tsetWon(winner);\n\t\t})\n\t\tsetSocket(clientSocket);\n\t}\n\treturn(\n\t\twon===\"none\"?\n\t\t\t<div>\n\t\t\t\t{myColor!==null?\n\t\t\t\t<div>\n\t\t\t\t\t<Board \n\t\t\t\t\t\tturn={turn} setTurn={setTurn}\n\t\t\t\t\t\twon ={won} setWon={setWon}\n\t\t\t\t\t\tsocket={socket}\n\t\t\t\t\t\tmyColor={myColor}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<h1>Turn: {turn} myColor: {myColor}</h1>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<h1>Looking for a match...</h1>\n\t\t\t}\n\t\t\t</div>\n\t\t:\n\t\t\t<div>\n\t\t\t\t\t<h1>{errMsg!==null && `${errMsg}. `}You {won === myColor?\"won\":\"lost\"}</h1>\n\t\t\t\t\t<button onClick={reset}>Play again</button>\n\t\t\t</div>\n\t);\n}\n\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\"\n\nReactDOM.render(<App/>,document.getElementById(\"root\"));"],"sourceRoot":""}