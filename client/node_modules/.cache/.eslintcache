[{"/home/jorge/github/chess/client/src/index.js":"1","/home/jorge/github/chess/client/src/components/App.jsx":"2","/home/jorge/github/chess/client/src/components/Board/Board.jsx":"3","/home/jorge/github/chess/client/src/components/Board/boardUtils.js":"4","/home/jorge/github/chess/client/src/components/Board/Cells/Cell.jsx":"5"},{"size":153,"mtime":1620949979236,"results":"6","hashOfConfig":"7"},{"size":810,"mtime":1624059003144,"results":"8","hashOfConfig":"7"},{"size":1586,"mtime":1621284232208,"results":"9","hashOfConfig":"7"},{"size":5444,"mtime":1621251830856,"results":"10","hashOfConfig":"7"},{"size":956,"mtime":1624003307941,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1djwamj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/jorge/github/chess/client/src/index.js",[],["24","25"],"/home/jorge/github/chess/client/src/components/App.jsx",["26"],"/home/jorge/github/chess/client/src/components/Board/Board.jsx",[],"/home/jorge/github/chess/client/src/components/Board/boardUtils.js",[],"/home/jorge/github/chess/client/src/components/Board/Cells/Cell.jsx",["27"],"import React from \"react\";\nimport Board from \"../Board\";\nimport styles from \"./Cell.module.css\"\n\nfunction Cell(props){\n\tconst white = (props.pos.i+props.pos.j) % 2 === 0;\n\tconst cellStyle={\n\t\tbackgroundColor: white?\"#787878\":\"#2b2b2b\",\n\t}\n\n\tconst type = props.piece? props.piece.type:\"\";\n\tconst pieceStyle = props.piece?{\n\t\tborderColor: `${props.piece.color===\"white\"?\"white\":\"black\"}`,\n\t\tborderWidth: \"0.2vmax\",\n\t\tborderStyle: \"solid\",\n\t\tcolor: props.piece.color===\"white\"?\"white\":\"black\"}\n\t\t:null\n\treturn(\n\t\t<div \n\t\t\tkey={props.pos.j+props.pos.i*props.n}\n\t\t\tclassName={styles.cell}\n\t\t\tstyle={cellStyle}\n\t\t\tid={`cell${props.pos.i}${props.pos.j}`}\n\t\t\tonClick={\n\t\t\t\t()=>props.onSelected({pos:props.pos,piece:props.piece})}\n\t\t>\n\t\t\t<div className={`${styles.pieceContainer} ${props.validMove?styles.validMove:styles.notValidMove}`}>\n\t\t\t\t<span className={styles.piece} style={pieceStyle}>\n\t\t\t\t\t{type}\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nexport default Cell;",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":10,"column":9,"nodeType":"34","messageId":"35","endLine":10,"endColumn":15},{"ruleId":"32","severity":1,"message":"36","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":13},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'socket' is assigned a value but never used.","Identifier","unusedVar","'Board' is defined but never used.","no-global-assign","no-unsafe-negation"]