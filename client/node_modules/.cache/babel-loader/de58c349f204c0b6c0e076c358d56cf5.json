{"ast":null,"code":"var _jsxFileName = \"/home/jorge/github/chess/src/components/Table/Table.jsx\";\nimport React from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Table.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createTable(n) {\n  const table = [];\n  const size = n * n;\n\n  for (let i = 0; i < size; i++) {\n    table.push( /*#__PURE__*/_jsxDEV(Cell, {\n      rowsize: n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 14\n    }, this));\n  }\n\n  return table;\n}\n\nfunction Table() {\n  const n = 8;\n  const tableStyle = {\n    width: \"500px\",\n    height: \"500px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: tableStyle,\n    children: createTable(n)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/jorge/github/chess/src/components/Table/Table.jsx"],"names":["React","Cell","styles","createTable","n","table","size","i","push","Table","tableStyle","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAGA,SAASC,WAAT,CAAqBC,CAArB,EAAuB;AACtB,QAAMC,KAAK,GAAC,EAAZ;AACA,QAAMC,IAAI,GAAGF,CAAC,GAACA,CAAf;;AACA,OAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,IAAd,EAAmBC,CAAC,EAApB,EAAuB;AACtBF,IAAAA,KAAK,CAACG,IAAN,eAAW,QAAC,IAAD;AAAM,MAAA,OAAO,EAAGJ;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAX;AACA;;AACD,SAAOC,KAAP;AACA;;AAED,SAASI,KAAT,GAAgB;AACf,QAAML,CAAC,GAAE,CAAT;AACA,QAAMM,UAAU,GAAG;AAACC,IAAAA,KAAK,EAAE,OAAR;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAAnB;AACA,sBACC;AAAK,IAAA,KAAK,EAAEF,UAAZ;AAAA,cACEP,WAAW,CAACC,CAAD;AADb;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;KARQK,K;AAWT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Table.module.css\"\n\n\nfunction createTable(n){\n\tconst table=[];\n\tconst size = n*n;\n\tfor(let i=0;i<size;i++){\n\t\ttable.push(<Cell rowsize ={n}/>);\n\t}\n\treturn table;\n}\n\nfunction Table(){\n\tconst n =8;\n\tconst tableStyle = {width: \"500px\",height: \"500px\"};\n\treturn (\n\t\t<div style={tableStyle}>\n\t\t\t{createTable(n)}\n\t\t</div>\n\t)\n}\n\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}