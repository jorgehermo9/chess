{"ast":null,"code":"var _jsxFileName = \"/home/jorge/github/chess/src/components/Board/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\";\nimport { createBoard } from \"./boardUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  function handleClick(target) {\n    if (selected === null) {\n      setSelected(target);\n    } else {\n      setBoard(prev => {\n        const newBoard = prev;\n        const selectedCell = selected.i + selected.j * prev.n;\n        const targetCell = target.i + target.j * prev.n;\n        newBoard.cells[targetCell].piece = prev.cells[selectedCell].piece;\n        newBoard.cells[selectedCell].piece = null;\n        console.log(target);\n        console.log(selectedCell);\n        setSelected(null);\n        return newBoard;\n      });\n    }\n  }\n\n  const n = 8;\n  const [board, setBoard] = useState(createBoard(n));\n  const [selected, setSelected] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.board,\n    children: board.cells.map((cell, index) => /*#__PURE__*/_jsxDEV(Cell, {\n      n: board.n,\n      i: cell.i,\n      j: cell.j,\n      piece: cell.piece,\n      onSelected: handleClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Board, \"lroLEWoHivqys4rtNpLgTy9k2Ww=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/jorge/github/chess/src/components/Board/Board.jsx"],"names":["React","useState","Cell","styles","createBoard","Board","handleClick","target","selected","setSelected","setBoard","prev","newBoard","selectedCell","i","j","n","targetCell","cells","piece","console","log","board","map","cell","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,WAAR,QAA0B,cAA1B;;;AAIA,SAASC,KAAT,GAAgB;AAAA;;AACf,WAASC,WAAT,CAAqBC,MAArB,EAA4B;AAE3B,QAAGC,QAAQ,KAAK,IAAhB,EAAqB;AACpBC,MAAAA,WAAW,CAACF,MAAD,CAAX;AACA,KAFD,MAEK;AACJG,MAAAA,QAAQ,CAACC,IAAI,IAAG;AACf,cAAMC,QAAQ,GAAGD,IAAjB;AACA,cAAME,YAAY,GAAGL,QAAQ,CAACM,CAAT,GAAWN,QAAQ,CAACO,CAAT,GAAWJ,IAAI,CAACK,CAAhD;AACA,cAAMC,UAAU,GAAGV,MAAM,CAACO,CAAP,GAASP,MAAM,CAACQ,CAAP,GAASJ,IAAI,CAACK,CAA1C;AACAJ,QAAAA,QAAQ,CAACM,KAAT,CAAeD,UAAf,EAA2BE,KAA3B,GAAmCR,IAAI,CAACO,KAAL,CAAWL,YAAX,EAAyBM,KAA5D;AACAP,QAAAA,QAAQ,CAACM,KAAT,CAAeL,YAAf,EAA6BM,KAA7B,GAAqC,IAArC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACAJ,QAAAA,WAAW,CAAC,IAAD,CAAX;AACA,eAAOG,QAAP;AACA,OAVO,CAAR;AAWA;AACD;;AACD,QAAMI,CAAC,GAAE,CAAT;AACA,QAAM,CAACM,KAAD,EAAOZ,QAAP,IAAmBT,QAAQ,CAACG,WAAW,CAACY,CAAD,CAAZ,CAAjC;AACA,QAAM,CAACR,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;AACA,sBACC;AAAK,IAAA,SAAS,EAAEE,MAAM,CAACmB,KAAvB;AAAA,cACEA,KAAK,CAACJ,KAAN,CAAYK,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,kBACjB,QAAC,IAAD;AAEA,MAAA,CAAC,EAAEH,KAAK,CAACN,CAFT;AAGA,MAAA,CAAC,EAAEQ,IAAI,CAACV,CAHR;AAIA,MAAA,CAAC,EAAEU,IAAI,CAACT,CAJR;AAKA,MAAA,KAAK,EAAES,IAAI,CAACL,KALZ;AAMA,MAAA,UAAU,EAAEb;AANZ,OACMmB,KADN;AAAA;AAAA;AAAA;AAAA,YADC;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;GAnCQpB,K;;KAAAA,K;AAsCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\"\nimport {createBoard} from \"./boardUtils\"\n\n\n\nfunction Board(){\n\tfunction handleClick(target){\n\n\t\tif(selected === null){\n\t\t\tsetSelected(target);\n\t\t}else{\n\t\t\tsetBoard(prev =>{\n\t\t\t\tconst newBoard = prev;\n\t\t\t\tconst selectedCell = selected.i+selected.j*prev.n;\n\t\t\t\tconst targetCell = target.i+target.j*prev.n;\n\t\t\t\tnewBoard.cells[targetCell].piece = prev.cells[selectedCell].piece;\n\t\t\t\tnewBoard.cells[selectedCell].piece = null;\n\t\t\t\tconsole.log(target);\n\t\t\t\tconsole.log(selectedCell);\n\t\t\t\tsetSelected(null);\n\t\t\t\treturn newBoard;\n\t\t\t})\n\t\t}\n\t}\n\tconst n =8;\n\tconst [board,setBoard] = useState(createBoard(n));\n\tconst [selected,setSelected] = useState(null);\n\treturn (\n\t\t<div className={styles.board}>\n\t\t\t{board.cells.map((cell,index) =>\n\t\t\t<Cell \n\t\t\tkey ={index}\n\t\t\tn={board.n} \n\t\t\ti={cell.i} \n\t\t\tj={cell.j} \n\t\t\tpiece={cell.piece}\n\t\t\tonSelected={handleClick}\n\t\t\t/>)}\n\t\t</div>\n\t)\n}\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}