{"ast":null,"code":"var _jsxFileName = \"/home/jorge/github/chess/src/components/Board/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\";\nimport { createBoard } from \"./boardUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  function handleClick(event) {\n    const target = event.target;\n\n    if (selected === null) {\n      setSelected({\n        i: target.i,\n        j: target.j\n      });\n    } else {\n      setBoard(prev => {\n        const newBoard = prev;\n        const selectedCell = selected.i + selected.j * prev.n;\n        const targetCell = target.i + target.j * prev.n;\n        newBoard.cells[targetCell].piece = prev[selectedCell].piece;\n        newBoard.cells[selectedCell].piece = null;\n        setSelected(null);\n        return newBoard;\n      });\n    }\n  }\n\n  const n = 8;\n  const [board, setBoard] = useState(createBoard(n));\n  const [selected, setSelected] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.board,\n    children: board.cells.map((cell, index) => /*#__PURE__*/_jsxDEV(Cell, {\n      n: board.n,\n      i: cell.i,\n      j: cell.j,\n      piece: cell.piece\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Board, \"lroLEWoHivqys4rtNpLgTy9k2Ww=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/jorge/github/chess/src/components/Board/Board.jsx"],"names":["React","useState","Cell","styles","createBoard","Board","handleClick","event","target","selected","setSelected","i","j","setBoard","prev","newBoard","selectedCell","n","targetCell","cells","piece","board","map","cell","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,WAAR,QAA0B,cAA1B;;;AAIA,SAASC,KAAT,GAAgB;AAAA;;AACf,WAASC,WAAT,CAAqBC,KAArB,EAA2B;AAC1B,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;;AACA,QAAGC,QAAQ,KAAK,IAAhB,EAAqB;AACpBC,MAAAA,WAAW,CAAC;AAACC,QAAAA,CAAC,EAACH,MAAM,CAACG,CAAV;AAAYC,QAAAA,CAAC,EAACJ,MAAM,CAACI;AAArB,OAAD,CAAX;AACA,KAFD,MAEK;AACJC,MAAAA,QAAQ,CAACC,IAAI,IAAG;AACf,cAAMC,QAAQ,GAAGD,IAAjB;AACA,cAAME,YAAY,GAAGP,QAAQ,CAACE,CAAT,GAAWF,QAAQ,CAACG,CAAT,GAAWE,IAAI,CAACG,CAAhD;AACA,cAAMC,UAAU,GAAGV,MAAM,CAACG,CAAP,GAASH,MAAM,CAACI,CAAP,GAASE,IAAI,CAACG,CAA1C;AACAF,QAAAA,QAAQ,CAACI,KAAT,CAAeD,UAAf,EAA2BE,KAA3B,GAAmCN,IAAI,CAACE,YAAD,CAAJ,CAAmBI,KAAtD;AACAL,QAAAA,QAAQ,CAACI,KAAT,CAAeH,YAAf,EAA6BI,KAA7B,GAAqC,IAArC;AACAV,QAAAA,WAAW,CAAC,IAAD,CAAX;AACA,eAAOK,QAAP;AACA,OARO,CAAR;AASA;AACD;;AACD,QAAME,CAAC,GAAE,CAAT;AACA,QAAM,CAACI,KAAD,EAAOR,QAAP,IAAmBZ,QAAQ,CAACG,WAAW,CAACa,CAAD,CAAZ,CAAjC;AACA,QAAM,CAACR,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,IAAD,CAAvC;AAEA,sBACC;AAAK,IAAA,SAAS,EAAEE,MAAM,CAACkB,KAAvB;AAAA,cACEA,KAAK,CAACF,KAAN,CAAYG,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,kBACjB,QAAC,IAAD;AAEA,MAAA,CAAC,EAAEH,KAAK,CAACJ,CAFT;AAGA,MAAA,CAAC,EAAEM,IAAI,CAACZ,CAHR;AAIA,MAAA,CAAC,EAAEY,IAAI,CAACX,CAJR;AAKA,MAAA,KAAK,EAAEW,IAAI,CAACH;AALZ,OACMI,KADN;AAAA;AAAA;AAAA;AAAA,YADC;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GAjCQnB,K;;KAAAA,K;AAoCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\"\nimport {createBoard} from \"./boardUtils\"\n\n\n\nfunction Board(){\n\tfunction handleClick(event){\n\t\tconst target = event.target;\n\t\tif(selected === null){\n\t\t\tsetSelected({i:target.i,j:target.j});\n\t\t}else{\n\t\t\tsetBoard(prev =>{\n\t\t\t\tconst newBoard = prev;\n\t\t\t\tconst selectedCell = selected.i+selected.j*prev.n;\n\t\t\t\tconst targetCell = target.i+target.j*prev.n;\n\t\t\t\tnewBoard.cells[targetCell].piece = prev[selectedCell].piece;\n\t\t\t\tnewBoard.cells[selectedCell].piece = null;\n\t\t\t\tsetSelected(null);\n\t\t\t\treturn newBoard\n\t\t\t})\n\t\t}\n\t}\n\tconst n =8;\n\tconst [board,setBoard] = useState(createBoard(n));\n\tconst [selected,setSelected] = useState(null);\n\n\treturn (\n\t\t<div className={styles.board}>\n\t\t\t{board.cells.map((cell,index) =>\n\t\t\t<Cell \n\t\t\tkey ={index}\n\t\t\tn={board.n} \n\t\t\ti={cell.i} \n\t\t\tj={cell.j} \n\t\t\tpiece={cell.piece}\n\t\t\t/>)}\n\t\t</div>\n\t)\n}\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}