{"ast":null,"code":"var _jsxFileName = \"/home/jorge/github/chess/src/components/Board/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\";\nimport { createBoard, getMoves } from \"./boardUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  function handleClick(target) {\n    if (selected === null) {\n      if (target.piece !== null) {\n        const moves = getMoves(board, target);\n\n        if (moves.length > 0) {\n          setSelected(target);\n          setMoves(getMoves(board, target));\n          console.log(getMoves(board, target));\n        }\n      }\n    } else {\n      if (validMoves.some(move => move.i === target.pos.i && move.j === target.pos.j)) {\n        setBoard(prev => {\n          const newBoard = prev;\n          const selectedCell = selected.pos.j + selected.pos.i * prev.n;\n          const targetCell = target.pos.j + target.pos.i * prev.n;\n          newBoard.cells[targetCell].piece = prev.cells[selectedCell].piece;\n          newBoard.cells[selectedCell].piece = null;\n          return newBoard;\n        });\n      }\n\n      setSelected(null);\n      setMoves([]);\n    }\n  }\n\n  const n = 8;\n  const [board, setBoard] = useState(createBoard(n));\n  const [selected, setSelected] = useState(null);\n  const [validMoves, setMoves] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.board,\n    children: board.cells.map((cell, index) => /*#__PURE__*/_jsxDEV(Cell, {\n      n: board.n,\n      pos: cell.pos,\n      piece: cell.piece,\n      validMove: validMoves.some(move => move.i === cell.pos.i && move.j === cell.pos.j),\n      onSelected: handleClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Board, \"0lQFasyI+UL9c/YEpw5Lggp4KVo=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/jorge/github/chess/src/components/Board/Board.jsx"],"names":["React","useState","Cell","styles","createBoard","getMoves","Board","handleClick","target","selected","piece","moves","board","length","setSelected","setMoves","console","log","validMoves","some","move","i","pos","j","setBoard","prev","newBoard","selectedCell","n","targetCell","cells","map","cell","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\"\nimport {createBoard,getMoves} from \"./boardUtils\"\n\n\nfunction Board(){\n\tfunction handleClick(target){\n\n\t\tif(selected === null){\n\t\t\tif(target.piece !==null){\n\t\t\t\tconst moves = getMoves(board,target);\n\t\t\t\tif(moves.length >0){\n\t\t\t\t\tsetSelected(target);\n\t\t\t\t\tsetMoves(getMoves(board,target));\n\t\t\t\t\tconsole.log(getMoves(board,target));\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tif(validMoves.some(move => move.i === target.pos.i && move.j === target.pos.j)){\n\n\t\t\t\tsetBoard(prev =>{\n\t\t\t\t\tconst newBoard = prev;\n\t\t\t\t\tconst selectedCell = selected.pos.j+selected.pos.i*prev.n;\n\t\t\t\t\tconst targetCell = target.pos.j+target.pos.i*prev.n;\n\t\t\t\t\tnewBoard.cells[targetCell].piece = prev.cells[selectedCell].piece;\n\t\t\t\t\tnewBoard.cells[selectedCell].piece = null;\n\t\t\t\t\treturn newBoard;\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetSelected(null);\n\t\t\tsetMoves([]);\n\t\t}\n\t}\n\tconst n =8;\n\tconst [board,setBoard] = useState(createBoard(n));\n\tconst [selected,setSelected] = useState(null);\n\tconst [validMoves,setMoves] = useState([]);\n\treturn (\n\t\t<div className={styles.board}>\n\t\t\t{board.cells.map((cell,index) =>\n\t\t\t<Cell \n\t\t\tkey ={index}\n\t\t\tn={board.n}\n\t\t\tpos={cell.pos} \n\t\t\tpiece={cell.piece}\n\t\t\tvalidMove={validMoves.some((move) => \n\t\t\t\t\t\t\t\tmove.i === cell.pos.i && move.j===cell.pos.j )}\n\t\t\tonSelected={handleClick}\n\t\t\t/>)}\n\t\t</div>\n\t)\n}\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}