{"ast":null,"code":"var _jsxFileName = \"/home/jorge/github/chess/src/components/Board/Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\";\nimport { createBoard } from \"./boardUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board() {\n  _s();\n\n  function handleClick(target) {\n    if (selected === null) {\n      if (target.piece !== null) {\n        setSelected(target);\n      }\n    } else {\n      setBoard(prev => {\n        const newBoard = prev;\n        const selectedCell = selected.j + selected.i * prev.n;\n        const targetCell = target.j + target.i * prev.n;\n        newBoard.cells[targetCell].piece = prev.cells[selectedCell].piece;\n        newBoard.cells[selectedCell].piece = null;\n        return newBoard;\n      });\n      setSelected(null);\n    }\n  }\n\n  const n = 8;\n  const [board, setBoard] = useState(createBoard(n));\n  const [selected, setSelected] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.board,\n    children: board.cells.map((cell, index) => /*#__PURE__*/_jsxDEV(Cell, {\n      n: board.n,\n      i: cell.i,\n      j: cell.j,\n      piece: cell.piece,\n      onSelected: handleClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Board, \"lroLEWoHivqys4rtNpLgTy9k2Ww=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/jorge/github/chess/src/components/Board/Board.jsx"],"names":["React","useState","Cell","styles","createBoard","Board","handleClick","target","selected","piece","setSelected","setBoard","prev","newBoard","selectedCell","j","i","n","targetCell","cells","board","map","cell","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAAQC,WAAR,QAA0B,cAA1B;;;AAIA,SAASC,KAAT,GAAgB;AAAA;;AACf,WAASC,WAAT,CAAqBC,MAArB,EAA4B;AAE3B,QAAGC,QAAQ,KAAK,IAAhB,EAAqB;AACpB,UAAGD,MAAM,CAACE,KAAP,KAAgB,IAAnB,EAAwB;AACvBC,QAAAA,WAAW,CAACH,MAAD,CAAX;AACA;AACD,KAJD,MAIK;AACJI,MAAAA,QAAQ,CAACC,IAAI,IAAG;AACf,cAAMC,QAAQ,GAAGD,IAAjB;AACA,cAAME,YAAY,GAAGN,QAAQ,CAACO,CAAT,GAAWP,QAAQ,CAACQ,CAAT,GAAWJ,IAAI,CAACK,CAAhD;AACA,cAAMC,UAAU,GAAGX,MAAM,CAACQ,CAAP,GAASR,MAAM,CAACS,CAAP,GAASJ,IAAI,CAACK,CAA1C;AACAJ,QAAAA,QAAQ,CAACM,KAAT,CAAeD,UAAf,EAA2BT,KAA3B,GAAmCG,IAAI,CAACO,KAAL,CAAWL,YAAX,EAAyBL,KAA5D;AACAI,QAAAA,QAAQ,CAACM,KAAT,CAAeL,YAAf,EAA6BL,KAA7B,GAAqC,IAArC;AACA,eAAOI,QAAP;AACA,OAPO,CAAR;AAQAH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA;AACD;;AACD,QAAMO,CAAC,GAAE,CAAT;AACA,QAAM,CAACG,KAAD,EAAOT,QAAP,IAAmBV,QAAQ,CAACG,WAAW,CAACa,CAAD,CAAZ,CAAjC;AACA,QAAM,CAACT,QAAD,EAAUE,WAAV,IAAyBT,QAAQ,CAAC,IAAD,CAAvC;AACA,sBACC;AAAK,IAAA,SAAS,EAAEE,MAAM,CAACiB,KAAvB;AAAA,cACEA,KAAK,CAACD,KAAN,CAAYE,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,kBACjB,QAAC,IAAD;AAEA,MAAA,CAAC,EAAEH,KAAK,CAACH,CAFT;AAGA,MAAA,CAAC,EAAEK,IAAI,CAACN,CAHR;AAIA,MAAA,CAAC,EAAEM,IAAI,CAACP,CAJR;AAKA,MAAA,KAAK,EAAEO,IAAI,CAACb,KALZ;AAMA,MAAA,UAAU,EAAEH;AANZ,OACMiB,KADN;AAAA;AAAA;AAAA;AAAA,YADC;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;GAnCQlB,K;;KAAAA,K;AAsCT,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\"\nimport {createBoard} from \"./boardUtils\"\n\n\n\nfunction Board(){\n\tfunction handleClick(target){\n\n\t\tif(selected === null){\n\t\t\tif(target.piece !==null){\n\t\t\t\tsetSelected(target);\n\t\t\t}\n\t\t}else{\n\t\t\tsetBoard(prev =>{\n\t\t\t\tconst newBoard = prev;\n\t\t\t\tconst selectedCell = selected.j+selected.i*prev.n;\n\t\t\t\tconst targetCell = target.j+target.i*prev.n;\n\t\t\t\tnewBoard.cells[targetCell].piece = prev.cells[selectedCell].piece;\n\t\t\t\tnewBoard.cells[selectedCell].piece = null;\n\t\t\t\treturn newBoard;\n\t\t\t})\n\t\t\tsetSelected(null);\n\t\t}\n\t}\n\tconst n =8;\n\tconst [board,setBoard] = useState(createBoard(n));\n\tconst [selected,setSelected] = useState(null);\n\treturn (\n\t\t<div className={styles.board}>\n\t\t\t{board.cells.map((cell,index) =>\n\t\t\t<Cell \n\t\t\tkey ={index}\n\t\t\tn={board.n} \n\t\t\ti={cell.i} \n\t\t\tj={cell.j} \n\t\t\tpiece={cell.piece}\n\t\t\tonSelected={handleClick}\n\t\t\t/>)}\n\t\t</div>\n\t)\n}\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}