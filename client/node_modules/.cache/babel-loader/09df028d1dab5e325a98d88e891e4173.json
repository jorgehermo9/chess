{"ast":null,"code":"import _slicedToArray from\"/home/jorge/github/chess/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Cell from\"./Cells/Cell\";import styles from\"./Board.module.css\";import{createBoard,getMoves}from\"./boardUtils\";import{jsx as _jsx}from\"react/jsx-runtime\";function Board(props){function handleClick(target){if(selected===null){if(target.piece!==null&&target.piece.color===turn){var moves=getMoves(board,target);if(moves.length>0){setSelected(target);setMoves(getMoves(board,target));}}}else{if(validMoves.some(function(move){return move.i===target.pos.i&&move.j===target.pos.j;})){setBoard(function(prev){var newBoard=prev;var selectedCell=selected.pos.j+selected.pos.i*prev.n;var targetCell=target.pos.j+target.pos.i*prev.n;newBoard.cells[targetCell].piece=prev.cells[selectedCell].piece;newBoard.cells[selectedCell].piece=null;return newBoard;});if(target.piece&&target.piece.type===\"K\"){props.setWon(turn);}setTurn(turn===\"white\"?\"black\":\"white\");}setSelected(null);setMoves([]);}}var n=8;var _useState=useState(createBoard(n)),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],setSelected=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),validMoves=_useState6[0],setMoves=_useState6[1];var turn=props.turn;var setTurn=props.setTurn;return/*#__PURE__*/_jsx(\"div\",{className:styles.board,children:board.cells.map(function(cell,index){return/*#__PURE__*/_jsx(Cell,{n:board.n,pos:cell.pos,piece:cell.piece,validMove:validMoves.some(function(move){return move.i===cell.pos.i&&move.j===cell.pos.j;}),onSelected:handleClick},index);})});}export default Board;","map":{"version":3,"sources":["/home/jorge/github/chess/client/src/components/Board/Board.jsx"],"names":["React","useState","Cell","styles","createBoard","getMoves","Board","props","handleClick","target","selected","piece","color","turn","moves","board","length","setSelected","setMoves","validMoves","some","move","i","pos","j","setBoard","prev","newBoard","selectedCell","n","targetCell","cells","type","setWon","setTurn","map","cell","index"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CACA,OAAQC,WAAR,CAAoBC,QAApB,KAAmC,cAAnC,C,2CAGA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAqB,CACpB,QAASC,CAAAA,WAAT,CAAqBC,MAArB,CAA4B,CAE3B,GAAGC,QAAQ,GAAK,IAAhB,CAAqB,CACpB,GAAGD,MAAM,CAACE,KAAP,GAAgB,IAAhB,EAAwBF,MAAM,CAACE,KAAP,CAAaC,KAAb,GAAuBC,IAAlD,CAAuD,CACtD,GAAMC,CAAAA,KAAK,CAAGT,QAAQ,CAACU,KAAD,CAAON,MAAP,CAAtB,CACA,GAAGK,KAAK,CAACE,MAAN,CAAc,CAAjB,CAAmB,CAClBC,WAAW,CAACR,MAAD,CAAX,CACAS,QAAQ,CAACb,QAAQ,CAACU,KAAD,CAAON,MAAP,CAAT,CAAR,CACA,CACD,CACD,CARD,IAQK,CACJ,GAAGU,UAAU,CAACC,IAAX,CAAgB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,CAAL,GAAWb,MAAM,CAACc,GAAP,CAAWD,CAAtB,EAA2BD,IAAI,CAACG,CAAL,GAAWf,MAAM,CAACc,GAAP,CAAWC,CAArD,EAApB,CAAH,CAA+E,CAE9EC,QAAQ,CAAC,SAAAC,IAAI,CAAG,CACf,GAAMC,CAAAA,QAAQ,CAAGD,IAAjB,CACA,GAAME,CAAAA,YAAY,CAAGlB,QAAQ,CAACa,GAAT,CAAaC,CAAb,CAAed,QAAQ,CAACa,GAAT,CAAaD,CAAb,CAAeI,IAAI,CAACG,CAAxD,CACA,GAAMC,CAAAA,UAAU,CAAGrB,MAAM,CAACc,GAAP,CAAWC,CAAX,CAAaf,MAAM,CAACc,GAAP,CAAWD,CAAX,CAAaI,IAAI,CAACG,CAAlD,CACAF,QAAQ,CAACI,KAAT,CAAeD,UAAf,EAA2BnB,KAA3B,CAAmCe,IAAI,CAACK,KAAL,CAAWH,YAAX,EAAyBjB,KAA5D,CACAgB,QAAQ,CAACI,KAAT,CAAeH,YAAf,EAA6BjB,KAA7B,CAAqC,IAArC,CACA,MAAOgB,CAAAA,QAAP,CACA,CAPO,CAAR,CAQA,GAAGlB,MAAM,CAACE,KAAP,EAAgBF,MAAM,CAACE,KAAP,CAAaqB,IAAb,GAAoB,GAAvC,CAA2C,CAC1CzB,KAAK,CAAC0B,MAAN,CAAapB,IAAb,EACA,CACDqB,OAAO,CAACrB,IAAI,GAAG,OAAP,CAAe,OAAf,CAAuB,OAAxB,CAAP,CACA,CACDI,WAAW,CAAC,IAAD,CAAX,CACAC,QAAQ,CAAC,EAAD,CAAR,CACA,CACD,CACD,GAAMW,CAAAA,CAAC,CAAE,CAAT,CACA,cAAyB5B,QAAQ,CAACG,WAAW,CAACyB,CAAD,CAAZ,CAAjC,wCAAOd,KAAP,eAAaU,QAAb,eACA,eAA+BxB,QAAQ,CAAC,IAAD,CAAvC,yCAAOS,QAAP,eAAgBO,WAAhB,eACA,eAA8BhB,QAAQ,CAAC,EAAD,CAAtC,yCAAOkB,UAAP,eAAkBD,QAAlB,eAEA,GAAIL,CAAAA,IAAI,CAAEN,KAAK,CAACM,IAAhB,CACA,GAAMqB,CAAAA,OAAO,CAAG3B,KAAK,CAAC2B,OAAtB,CACA,mBACC,YAAK,SAAS,CAAE/B,MAAM,CAACY,KAAvB,UACEA,KAAK,CAACgB,KAAN,CAAYI,GAAZ,CAAgB,SAACC,IAAD,CAAMC,KAAN,qBACjB,KAAC,IAAD,EAEA,CAAC,CAAEtB,KAAK,CAACc,CAFT,CAGA,GAAG,CAAEO,IAAI,CAACb,GAHV,CAIA,KAAK,CAAEa,IAAI,CAACzB,KAJZ,CAKA,SAAS,CAAEQ,UAAU,CAACC,IAAX,CAAgB,SAACC,IAAD,QACtBA,CAAAA,IAAI,CAACC,CAAL,GAAWc,IAAI,CAACb,GAAL,CAASD,CAApB,EAAyBD,IAAI,CAACG,CAAL,GAASY,IAAI,CAACb,GAAL,CAASC,CADrB,EAAhB,CALX,CAOA,UAAU,CAAEhB,WAPZ,EACM6B,KADN,CADiB,EAAhB,CADF,EADD,CAcA,CAGD,cAAe/B,CAAAA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Cell from \"./Cells/Cell\";\nimport styles from \"./Board.module.css\"\nimport {createBoard,getMoves} from \"./boardUtils\"\n\n\nfunction Board(props){\n\tfunction handleClick(target){\n\n\t\tif(selected === null){\n\t\t\tif(target.piece !==null && target.piece.color === turn){\n\t\t\t\tconst moves = getMoves(board,target);\n\t\t\t\tif(moves.length >0){\n\t\t\t\t\tsetSelected(target);\n\t\t\t\t\tsetMoves(getMoves(board,target));\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tif(validMoves.some(move => move.i === target.pos.i && move.j === target.pos.j)){\n\n\t\t\t\tsetBoard(prev =>{\n\t\t\t\t\tconst newBoard = prev;\n\t\t\t\t\tconst selectedCell = selected.pos.j+selected.pos.i*prev.n;\n\t\t\t\t\tconst targetCell = target.pos.j+target.pos.i*prev.n;\n\t\t\t\t\tnewBoard.cells[targetCell].piece = prev.cells[selectedCell].piece;\n\t\t\t\t\tnewBoard.cells[selectedCell].piece = null;\n\t\t\t\t\treturn newBoard;\n\t\t\t\t});\n\t\t\t\tif(target.piece && target.piece.type===\"K\"){\n\t\t\t\t\tprops.setWon(turn);\n\t\t\t\t}\n\t\t\t\tsetTurn(turn===\"white\"?\"black\":\"white\");\n\t\t\t}\n\t\t\tsetSelected(null);\n\t\t\tsetMoves([]);\n\t\t}\n\t}\n\tconst n =8;\n\tconst [board,setBoard] = useState(createBoard(n));\n\tconst [selected,setSelected] = useState(null);\n\tconst [validMoves,setMoves] = useState([]);\n\n\tlet turn =props.turn;\n\tconst setTurn = props.setTurn;\n\treturn (\n\t\t<div className={styles.board}>\n\t\t\t{board.cells.map((cell,index) =>\n\t\t\t<Cell \n\t\t\tkey ={index}\n\t\t\tn={board.n}\n\t\t\tpos={cell.pos} \n\t\t\tpiece={cell.piece}\n\t\t\tvalidMove={validMoves.some((move) => \n\t\t\t\t\t\t\t\tmove.i === cell.pos.i && move.j===cell.pos.j )}\n\t\t\tonSelected={handleClick}\n\t\t\t/>)}\n\t\t</div>\n\t)\n}\n\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}