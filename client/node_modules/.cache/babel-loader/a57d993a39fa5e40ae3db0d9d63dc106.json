{"ast":null,"code":"import _toConsumableArray from\"/home/jorge/github/chess/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";function createCell(i,j){return{pos:{i:i,j:j},piece:null};}export function createBoard(n){var board={n:n,cells:[]};for(var i=0;i<n;i++){for(var j=0;j<n;j++){board.cells.push(createCell(i,j));}}var settedBoard=setupBoard(board);return settedBoard;}function setPiece(board,type,color,i,j){var cell=board.cells[j+i*board.n];cell.piece={color:color,type:type};}function setupBoard(board){var newBoard=board;setPiece(newBoard,\"R\",\"black\",0,0);setPiece(newBoard,\"N\",\"black\",0,1);setPiece(newBoard,\"B\",\"black\",0,2);setPiece(newBoard,\"Q\",\"black\",0,3);setPiece(newBoard,\"K\",\"black\",0,4);setPiece(newBoard,\"B\",\"black\",0,5);setPiece(newBoard,\"N\",\"black\",0,6);setPiece(newBoard,\"R\",\"black\",0,7);setPiece(newBoard,\"P\",\"black\",1,0);setPiece(newBoard,\"P\",\"black\",1,1);setPiece(newBoard,\"P\",\"black\",1,2);setPiece(newBoard,\"P\",\"black\",1,3);setPiece(newBoard,\"P\",\"black\",1,4);setPiece(newBoard,\"P\",\"black\",1,5);setPiece(newBoard,\"P\",\"black\",1,6);setPiece(newBoard,\"P\",\"black\",1,7);setPiece(newBoard,\"R\",\"white\",7,0);setPiece(newBoard,\"N\",\"white\",7,1);setPiece(newBoard,\"B\",\"white\",7,2);setPiece(newBoard,\"Q\",\"white\",7,3);setPiece(newBoard,\"K\",\"white\",7,4);setPiece(newBoard,\"B\",\"white\",7,5);setPiece(newBoard,\"N\",\"white\",7,6);setPiece(newBoard,\"R\",\"white\",7,7);setPiece(newBoard,\"P\",\"white\",6,0);setPiece(newBoard,\"P\",\"white\",6,1);setPiece(newBoard,\"P\",\"white\",6,2);setPiece(newBoard,\"P\",\"white\",6,3);setPiece(newBoard,\"P\",\"white\",6,4);setPiece(newBoard,\"P\",\"white\",6,5);setPiece(newBoard,\"P\",\"white\",6,6);setPiece(newBoard,\"P\",\"white\",6,7);return newBoard;}function isValidMove(board,move){return move.i>=0&&move.i<board.n&&move.j>=0&&move.j<board.n;}function validMoves(board,color,moves){return moves.filter(function(move){var target=move.j+move.i*board.n;return isValidMove(board,move)&&(board.cells[target].piece===null||board.cells[target].piece.color!==color);});}function pawnMoves(board,_ref,color){var i=_ref.i,j=_ref.j;var facing=color===\"black\"?1:-1;var startVertical=color===\"black\"?1:6;var moves=[];var enemies=[{i:i+facing,j:j-1},{i:i+facing,j:j+1}];var move={i:i+facing,j:j};var doublemove={i:i+2*facing,j:j};enemies.forEach(function(enemy){if(isValidMove(board,enemy)&&board.cells[enemy.j+enemy.i*board.n].piece&&board.cells[enemy.j+enemy.i*board.n].piece.color!==color){moves.push(enemy);}});if(isValidMove(board,move)&&board.cells[move.j+move.i*board.n].piece===null){moves.push(move);if(i===startVertical&&isValidMove(board,doublemove)&&board.cells[doublemove.j+doublemove.i*board.n].piece===null){moves.push(doublemove);}}return validMoves(board,color,moves);}function knightMoves(board,_ref2,color){var i=_ref2.i,j=_ref2.j;var moves=[{i:i+2,j:j-1},{i:i+2,j:j+1},{i:i-2,j:j-1},{i:i-2,j:j+1},{i:i+1,j:j-2},{i:i-1,j:j-2},{i:i+1,j:j+2},{i:i-1,j:j+2}];return validMoves(board,color,moves);}function kingMoves(board,_ref3,color){var i=_ref3.i,j=_ref3.j;var moves=[{i:i+1,j:j},{i:i-1,j:j},{i:i,j:j+1},{i:i,j:j-1},{i:i-1,j:j-1},{i:i-1,j:j+1},{i:i+1,j:j-1},{i:i+1,j:j+1}];return validMoves(board,color,moves);}function expand(board,direction,starting){var moves=[];var count=1;var cell={i:starting.i+direction.i,j:starting.j+direction.j};while(isValidMove(board,cell)&&board.cells[cell.j+cell.i*board.n].piece===null){moves.push(cell);count++;cell={i:starting.i+direction.i*count,j:starting.j+direction.j*count};}moves.push(cell);//Add last cell as target cell\nreturn moves;}function queenMoves(board,starting,color){var moves=[];moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:1,j:0},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:-1,j:0},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:0,j:1},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:0,j:-1},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:-1,j:-1},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:-1,j:1},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:1,j:1},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:1,j:-1},starting)));return validMoves(board,color,moves);}function bishopMoves(board,starting,color){var moves=[];moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:-1,j:-1},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:-1,j:1},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:1,j:1},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:1,j:-1},starting)));return validMoves(board,color,moves);}function rookMoves(board,starting,color){var moves=[];moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:1,j:0},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:-1,j:0},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:0,j:1},starting)));moves=[].concat(_toConsumableArray(moves),_toConsumableArray(expand(board,{i:0,j:-1},starting)));return validMoves(board,color,moves);}export function getMoves(board,_ref4){var pos=_ref4.pos,piece=_ref4.piece;var moves=[];switch(piece.type){case\"P\":moves=pawnMoves(board,pos,piece.color);break;case\"N\":moves=knightMoves(board,pos,piece.color);break;case\"K\":moves=kingMoves(board,pos,piece.color);break;case\"Q\":moves=queenMoves(board,pos,piece.color);break;case\"B\":moves=bishopMoves(board,pos,piece.color);break;case\"R\":moves=rookMoves(board,pos,piece.color);break;default:break;}return moves;}","map":{"version":3,"sources":["/home/jorge/github/chess/client/src/components/Board/boardUtils.js"],"names":["createCell","i","j","pos","piece","createBoard","n","board","cells","push","settedBoard","setupBoard","setPiece","type","color","cell","newBoard","isValidMove","move","validMoves","moves","filter","target","pawnMoves","facing","startVertical","enemies","doublemove","forEach","enemy","knightMoves","kingMoves","expand","direction","starting","count","queenMoves","bishopMoves","rookMoves","getMoves"],"mappings":"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","sourcesContent":["function createCell(i,j){\n\treturn {pos:{i:i,j:j}\n\t\t\t\t\t,piece: null };\n}\n\nexport function createBoard(n){\n\tconst board={n:n,cells:[]};\n\tfor(let i=0;i<n;i++){\n\t\tfor(let j =0;j<n;j++){\n\t\t\tboard.cells.push(createCell(i,j));\n\t\t}\n\t}\n\tconst settedBoard = setupBoard(board);\n\treturn settedBoard;\n}\nfunction setPiece(board,type,color,i,j){\n\tconst cell= board.cells[j + i*board.n];\n\tcell.piece = {color:color,type:type};\n}\nfunction setupBoard(board){\n\tconst newBoard = board;\n\tsetPiece(newBoard,\"R\",\"black\",0,0);\n\tsetPiece(newBoard,\"N\",\"black\",0,1);\n\tsetPiece(newBoard,\"B\",\"black\",0,2);\n\tsetPiece(newBoard,\"Q\",\"black\",0,3);\n\tsetPiece(newBoard,\"K\",\"black\",0,4);\n\tsetPiece(newBoard,\"B\",\"black\",0,5);\n\tsetPiece(newBoard,\"N\",\"black\",0,6);\n\tsetPiece(newBoard,\"R\",\"black\",0,7);\n\tsetPiece(newBoard,\"P\",\"black\",1,0);\n\tsetPiece(newBoard,\"P\",\"black\",1,1);\n\tsetPiece(newBoard,\"P\",\"black\",1,2);\n\tsetPiece(newBoard,\"P\",\"black\",1,3);\n\tsetPiece(newBoard,\"P\",\"black\",1,4);\n\tsetPiece(newBoard,\"P\",\"black\",1,5);\n\tsetPiece(newBoard,\"P\",\"black\",1,6);\n\tsetPiece(newBoard,\"P\",\"black\",1,7);\t\n\t\n\tsetPiece(newBoard,\"R\",\"white\",7,0);\n\tsetPiece(newBoard,\"N\",\"white\",7,1);\n\tsetPiece(newBoard,\"B\",\"white\",7,2);\n\tsetPiece(newBoard,\"Q\",\"white\",7,3);\n\tsetPiece(newBoard,\"K\",\"white\",7,4);\n\tsetPiece(newBoard,\"B\",\"white\",7,5);\n\tsetPiece(newBoard,\"N\",\"white\",7,6);\n\tsetPiece(newBoard,\"R\",\"white\",7,7);\n\tsetPiece(newBoard,\"P\",\"white\",6,0);\n\tsetPiece(newBoard,\"P\",\"white\",6,1);\n\tsetPiece(newBoard,\"P\",\"white\",6,2);\n\tsetPiece(newBoard,\"P\",\"white\",6,3);\n\tsetPiece(newBoard,\"P\",\"white\",6,4);\n\tsetPiece(newBoard,\"P\",\"white\",6,5);\n\tsetPiece(newBoard,\"P\",\"white\",6,6);\n\tsetPiece(newBoard,\"P\",\"white\",6,7);\n\n\treturn newBoard;\n}\n\nfunction isValidMove(board,move){\n\treturn move.i >=0 && move.i < board.n && move.j >=0 && move.j<board.n;\n}\nfunction validMoves(board,color,moves){\n\treturn moves.filter(move =>{\n\t\tconst target = move.j+move.i*board.n;\n\t\treturn (\n\t\t\tisValidMove(board,move) &&\n\t\t\t(board.cells[target].piece ===null || board.cells[target].piece.color !== color)\n\t\t);\n\t})\n}\nfunction pawnMoves(board,{i,j},color){\n\tconst facing = color === \"black\"?1:-1;\n\tconst startVertical = color===\"black\"?1:6;\n\tconst moves =[];\n\tconst enemies = [{i:i+facing,j:j-1},{i:i+facing,j:j+1}];\n\tlet move = {i:i+facing,j:j};\n\tlet doublemove = {i:i+2*facing,j:j};\n\n\tenemies.forEach( enemy => {\n\t\tif(isValidMove(board,enemy) && \n\t\t(board.cells[enemy.j + enemy.i*board.n].piece&&board.cells[enemy.j + enemy.i*board.n].piece.color!==color )){\n\t\t\tmoves.push(enemy);\n\t\t}\n\t})\n\n\tif(isValidMove(board,move)&&(board.cells[move.j + move.i*board.n].piece===null)){\n\t\t\tmoves.push(move);\n\t\t\tif(i ===startVertical && \n\t\t\t\tisValidMove(board,doublemove)&&(board.cells[doublemove.j + doublemove.i*board.n].piece===null)){\n\t\t\t\tmoves.push(doublemove);\n\t\t\t}\n\t\t}\n\treturn validMoves(board,color,moves);\n}\nfunction knightMoves(board,{i,j},color){\n\tconst moves =[\n\t\t{i:i+2,j:j-1},\n\t\t{i:i+2,j:j+1},\n\t\t{i:i-2,j:j-1},\n\t\t{i:i-2,j:j+1},\n\t\t{i:i+1,j:j-2},\n\t\t{i:i-1,j:j-2},\n\t\t{i:i+1,j:j+2},\n\t\t{i:i-1,j:j+2}\n\t];\n\treturn validMoves(board,color,moves);\n}\nfunction kingMoves(board,{i,j},color){\n\tconst moves = [\n\t\t{i:i+1,j:j},\n\t\t{i:i-1,j:j},\n\t\t{i:i,j:j+1},\n\t\t{i:i,j:j-1},\n\t\t{i:i-1,j:j-1},\n\t\t{i:i-1,j:j+1},\n\t\t{i:i+1,j:j-1},\n\t\t{i:i+1,j:j+1},\n\t];\n\treturn validMoves(board,color,moves);\n}\nfunction expand(board,direction,starting){\n\tlet moves=[];\n\tlet count =1;\n\tlet cell = {i:starting.i + direction.i,j:starting.j+direction.j};\n\twhile(isValidMove(board,cell) && board.cells[cell.j+cell.i*board.n].piece ===null){\n\t\tmoves.push(cell);\n\t\tcount++;\n\t\tcell = {i:starting.i+direction.i*count,j:starting.j+direction.j*count};\n\t}\n\tmoves.push(cell)//Add last cell as target cell\n\treturn moves;\n}\nfunction queenMoves(board,starting,color){\n\tlet moves=[];\n\tmoves = [...moves,...expand(board,{i:1,j:0},starting)];\n\tmoves = [...moves,...expand(board,{i:-1,j:0},starting)];\n\tmoves = [...moves,...expand(board,{i:0,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:0,j:-1},starting)];\n\n\tmoves = [...moves,...expand(board,{i:-1,j:-1},starting)];\n\tmoves = [...moves,...expand(board,{i:-1,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:1,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:1,j:-1},starting)];\n\treturn validMoves(board,color,moves);\n}\nfunction bishopMoves(board,starting,color){\n\tlet moves = [];\n\n\tmoves = [...moves,...expand(board,{i:-1,j:-1},starting)];\n\tmoves = [...moves,...expand(board,{i:-1,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:1,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:1,j:-1},starting)];\n\treturn validMoves(board,color,moves);\n}\n\nfunction rookMoves(board,starting,color){\n\tlet moves =[];\n\tmoves = [...moves,...expand(board,{i:1,j:0},starting)];\n\tmoves = [...moves,...expand(board,{i:-1,j:0},starting)];\n\tmoves = [...moves,...expand(board,{i:0,j:1},starting)];\n\tmoves = [...moves,...expand(board,{i:0,j:-1},starting)];\n\treturn validMoves(board,color,moves);\n}\nexport function getMoves(board,{pos,piece}){\n\tlet moves= [];\n\tswitch (piece.type) {\n\t\tcase \"P\":\n\t\t\tmoves = pawnMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"N\":\n\t\t\tmoves = knightMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"K\":\n\t\t\tmoves = kingMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"Q\":\n\t\t\tmoves = queenMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"B\":\n\t\t\tmoves = bishopMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\tcase \"R\":\n\t\t\tmoves = rookMoves(board,pos,piece.color);\n\t\t\tbreak;\n\t\t\t\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn moves;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}