{"ast":null,"code":"var _jsxFileName = \"/home/jorge/github/chess/src/components/Board/Cells/Cell.jsx\";\nimport React from \"react\";\nimport styles from \"./Cell.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cell(props) {\n  const perc = 100 / props.n;\n  const white = (props.i + props.j) % 2 === 0;\n  const cellStyle = {\n    width: `${perc}%`,\n    height: `${perc}%`,\n    backgroundColor: white ? \"white\" : \"black\",\n    color: white ? \"black\" : \"white\"\n  };\n  const type = props.piece ? props.piece.type : \"\";\n  console.log(cellStyle);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cell,\n    style: cellStyle,\n    id: `cell${props.i}${props.j}`,\n    onClick: () => props.onSelected({\n      i: props.i,\n      j: props.j\n    }),\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/home/jorge/github/chess/src/components/Board/Cells/Cell.jsx"],"names":["React","styles","Cell","props","perc","n","white","i","j","cellStyle","width","height","backgroundColor","color","type","piece","console","log","cell","onSelected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AACnB,QAAMC,IAAI,GAAG,MAAID,KAAK,CAACE,CAAvB;AACA,QAAMC,KAAK,GAAG,CAACH,KAAK,CAACI,CAAN,GAAQJ,KAAK,CAACK,CAAf,IAAoB,CAApB,KAA0B,CAAxC;AACA,QAAMC,SAAS,GAAC;AACfC,IAAAA,KAAK,EAAG,GAAEN,IAAK,GADA;AAEfO,IAAAA,MAAM,EAAG,GAAEP,IAAK,GAFD;AAGfQ,IAAAA,eAAe,EAAEN,KAAK,GAAC,OAAD,GAAS,OAHhB;AAIfO,IAAAA,KAAK,EAACP,KAAK,GAAC,OAAD,GAAS;AAJL,GAAhB;AAOA,QAAMQ,IAAI,GAAGX,KAAK,CAACY,KAAN,GAAaZ,KAAK,CAACY,KAAN,CAAYD,IAAzB,GAA8B,EAA3C;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACA,sBACC;AAAK,IAAA,SAAS,EAAER,MAAM,CAACiB,IAAvB;AACA,IAAA,KAAK,EAAET,SADP;AAEA,IAAA,EAAE,EAAG,OAAMN,KAAK,CAACI,CAAE,GAAEJ,KAAK,CAACK,CAAE,EAF7B;AAGA,IAAA,OAAO,EACN,MAAIL,KAAK,CAACgB,UAAN,CAAiB;AAACZ,MAAAA,CAAC,EAACJ,KAAK,CAACI,CAAT;AAAWC,MAAAA,CAAC,EAACL,KAAK,CAACK;AAAnB,KAAjB,CAJL;AAAA,2BAMC;AAAA,gBAAIM;AAAJ;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA,UADD;AAUA;;KAtBQZ,I;AAyBT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./Cell.module.css\"\n\nfunction Cell(props){\n\tconst perc = 100/props.n;\n\tconst white = (props.i+props.j) % 2 === 0;\n\tconst cellStyle={\n\t\twidth: `${perc}%`,\n\t\theight: `${perc}%`,\n\t\tbackgroundColor: white?\"white\":\"black\",\n\t\tcolor:white?\"black\":\"white\",\n\t}\n\n\tconst type = props.piece? props.piece.type:\"\";\n\tconsole.log(cellStyle);\n\treturn(\n\t\t<div className={styles.cell} \n\t\tstyle={cellStyle}\n\t\tid={`cell${props.i}${props.j}`}\n\t\tonClick={\n\t\t\t()=>props.onSelected({i:props.i,j:props.j})\n\t\t}\n\t\t><p>{type}</p>\n\t\t</div>\n\t)\n}\n\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}