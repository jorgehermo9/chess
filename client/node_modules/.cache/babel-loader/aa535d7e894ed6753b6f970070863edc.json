{"ast":null,"code":"function createCell(n, i, j) {\n  return {\n    n: n,\n    i: i,\n    j: j\n  };\n}\n\nfunction createBoard(n) {\n  const board = [];\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      board.push(createCell(n, i, j));\n    }\n  }\n\n  return board;\n}\n\nfunction Piece(type, i, j) {\n  return {\n    type: type,\n    pos: {\n      i,\n      j\n    }\n  };\n}\n\n_c = Piece;\n\nfunction setupBoard(board) {\n  return {\n    black: [new Piece(\"R\", 1, 1), new Piece(\"N\", 1, 2), new Piece(\"B\", 1, 3), new Piece(\"Q\", 1, 4), new Piece(\"K\", 1, 5), new Piece(\"B\", 1, 6), new Piece(\"N\", 1, 7), new Piece(\"R\", 1, 8), new Piece(\"P\", 2, 1), new Piece(\"P\", 2, 2), new Piece(\"P\", 2, 3), new Piece(\"P\", 2, 4), new Piece(\"P\", 2, 5), new Piece(\"P\", 2, 6), new Piece(\"P\", 2, 7), new Piece(\"P\", 2, 8)],\n    white: [new Piece(\"R\", 8, 1), new Piece(\"N\", 8, 2), new Piece(\"B\", 8, 3), new Piece(\"Q\", 8, 4), new Piece(\"K\", 8, 5), new Piece(\"B\", 8, 6), new Piece(\"N\", 8, 7), new Piece(\"R\", 8, 8), new Piece(\"P\", 7, 1), new Piece(\"P\", 7, 2), new Piece(\"P\", 7, 3), new Piece(\"P\", 7, 4), new Piece(\"P\", 7, 5), new Piece(\"P\", 7, 6), new Piece(\"P\", 7, 7), new Piece(\"P\", 7, 8)]\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"sources":["/home/jorge/github/chess/src/components/Board/boardUtils.js"],"names":["createCell","n","i","j","createBoard","board","push","Piece","type","pos","setupBoard","black","white"],"mappings":"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","sourcesContent":["function createCell(n,i,j){\n\treturn {n:n,i:i,j:j};\n}\n\nfunction createBoard(n){\n\tconst board=[];\n\tfor(let i=0;i<n;i++){\n\t\tfor(let j =0;j<n;j++){\n\t\t\tboard.push(createCell(n,i,j));\n\t\t}\n\t}\n\treturn board;\n}\nfunction Piece(type,i,j){\n\treturn {\n\t\ttype:type,pos:{i,j}\n\t};\n}\nfunction setupBoard(board){\n\treturn {\n\t\tblack:[\n\t\t\tnew Piece(\"R\",1,1),\n\t\t\tnew Piece(\"N\",1,2),\n\t\t\tnew Piece(\"B\",1,3),\n\t\t\tnew Piece(\"Q\",1,4),\n\t\t\tnew Piece(\"K\",1,5),\n\t\t\tnew Piece(\"B\",1,6),\n\t\t\tnew Piece(\"N\",1,7),\n\t\t\tnew Piece(\"R\",1,8),\n\t\t\tnew Piece(\"P\",2,1),\n\t\t\tnew Piece(\"P\",2,2),\n\t\t\tnew Piece(\"P\",2,3),\n\t\t\tnew Piece(\"P\",2,4),\n\t\t\tnew Piece(\"P\",2,5),\n\t\t\tnew Piece(\"P\",2,6),\n\t\t\tnew Piece(\"P\",2,7),\n\t\t\tnew Piece(\"P\",2,8),\t\n\t\t],\n\n\t\twhite:[\n\t\t\tnew Piece(\"R\",8,1),\n\t\t\tnew Piece(\"N\",8,2),\n\t\t\tnew Piece(\"B\",8,3),\n\t\t\tnew Piece(\"Q\",8,4),\n\t\t\tnew Piece(\"K\",8,5),\n\t\t\tnew Piece(\"B\",8,6),\n\t\t\tnew Piece(\"N\",8,7),\n\t\t\tnew Piece(\"R\",8,8),\n\t\t\tnew Piece(\"P\",7,1),\n\t\t\tnew Piece(\"P\",7,2),\n\t\t\tnew Piece(\"P\",7,3),\n\t\t\tnew Piece(\"P\",7,4),\n\t\t\tnew Piece(\"P\",7,5),\n\t\t\tnew Piece(\"P\",7,6),\n\t\t\tnew Piece(\"P\",7,7),\n\t\t\tnew Piece(\"P\",7,8),\t\n\t\t]\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}