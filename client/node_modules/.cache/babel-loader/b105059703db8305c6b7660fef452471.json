{"ast":null,"code":"function createCell(i, j) {\n  return {\n    i: i,\n    j: j,\n    piece: null\n  };\n}\n\nexport function createBoard(n) {\n  const board = {\n    n: n,\n    cells: []\n  };\n\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      board.cells.push(createCell(i, j));\n    }\n  }\n\n  const settedBoard = setupBoard(board);\n  return settedBoard;\n}\n\nfunction setPiece(board, type, color, i, j) {\n  const cell = board.cells[i + j * board.n];\n  cell.piece = {\n    color: color,\n    type: type\n  };\n}\n\nfunction setupBoard(board) {\n  const newBoard = board;\n  setPiece(newBoard, \"R\", \"black\", 0, 0);\n  setPiece(newBoard, \"N\", \"black\", 0, 1);\n  setPiece(newBoard, \"B\", \"black\", 0, 2);\n  setPiece(newBoard, \"Q\", \"black\", 0, 3);\n  setPiece(newBoard, \"K\", \"black\", 0, 4);\n  setPiece(newBoard, \"B\", \"black\", 0, 5);\n  setPiece(newBoard, \"N\", \"black\", 0, 6);\n  setPiece(newBoard, \"R\", \"black\", 0, 7);\n  setPiece(newBoard, \"P\", \"black\", 1, 0);\n  setPiece(newBoard, \"P\", \"black\", 1, 1);\n  setPiece(newBoard, \"P\", \"black\", 1, 2);\n  setPiece(newBoard, \"P\", \"black\", 1, 3);\n  setPiece(newBoard, \"P\", \"black\", 1, 4);\n  setPiece(newBoard, \"P\", \"black\", 1, 5);\n  setPiece(newBoard, \"P\", \"black\", 1, 6);\n  setPiece(newBoard, \"P\", \"black\", 1, 7);\n  setPiece(newBoard, \"R\", \"white\", 7, 0);\n  setPiece(newBoard, \"N\", \"white\", 7, 1);\n  setPiece(newBoard, \"B\", \"white\", 7, 2);\n  setPiece(newBoard, \"Q\", \"white\", 7, 3);\n  setPiece(newBoard, \"K\", \"white\", 7, 4);\n  setPiece(newBoard, \"B\", \"white\", 7, 5);\n  setPiece(newBoard, \"N\", \"white\", 7, 6);\n  setPiece(newBoard, \"R\", \"white\", 7, 7);\n  setPiece(newBoard, \"P\", \"white\", 6, 0);\n  setPiece(newBoard, \"P\", \"white\", 6, 1);\n  setPiece(newBoard, \"P\", \"white\", 6, 2);\n  setPiece(newBoard, \"P\", \"white\", 6, 3);\n  setPiece(newBoard, \"P\", \"white\", 6, 4);\n  setPiece(newBoard, \"P\", \"white\", 6, 5);\n  setPiece(newBoard, \"P\", \"white\", 6, 6);\n  setPiece(newBoard, \"P\", \"white\", 6, 7);\n  return newBoard;\n}","map":{"version":3,"sources":["/home/jorge/github/chess/src/components/Board/boardUtils.js"],"names":["createCell","i","j","piece","createBoard","n","board","cells","push","settedBoard","setupBoard","setPiece","type","color","cell","newBoard"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,CAApB,EAAsBC,CAAtB,EAAwB;AACvB,SAAO;AAACD,IAAAA,CAAC,EAACA,CAAH;AAAKC,IAAAA,CAAC,EAACA,CAAP;AAASC,IAAAA,KAAK,EAAE;AAAhB,GAAP;AACA;;AAED,OAAO,SAASC,WAAT,CAAqBC,CAArB,EAAuB;AAC7B,QAAMC,KAAK,GAAC;AAACD,IAAAA,CAAC,EAACA,CAAH;AAAKE,IAAAA,KAAK,EAAC;AAAX,GAAZ;;AACA,OAAI,IAAIN,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACI,CAAd,EAAgBJ,CAAC,EAAjB,EAAoB;AACnB,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAACG,CAAf,EAAiBH,CAAC,EAAlB,EAAqB;AACpBI,MAAAA,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBR,UAAU,CAACC,CAAD,EAAGC,CAAH,CAA3B;AACA;AACD;;AACD,QAAMO,WAAW,GAAGC,UAAU,CAACJ,KAAD,CAA9B;AACA,SAAOG,WAAP;AACA;;AACD,SAASE,QAAT,CAAkBL,KAAlB,EAAwBM,IAAxB,EAA6BC,KAA7B,EAAmCZ,CAAnC,EAAqCC,CAArC,EAAuC;AACtC,QAAMY,IAAI,GAAER,KAAK,CAACC,KAAN,CAAYN,CAAC,GAAGC,CAAC,GAACI,KAAK,CAACD,CAAxB,CAAZ;AACAS,EAAAA,IAAI,CAACX,KAAL,GAAa;AAACU,IAAAA,KAAK,EAACA,KAAP;AAAaD,IAAAA,IAAI,EAACA;AAAlB,GAAb;AACA;;AACD,SAASF,UAAT,CAAoBJ,KAApB,EAA0B;AACzB,QAAMS,QAAQ,GAAGT,KAAjB;AACAK,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AAEAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AACAJ,EAAAA,QAAQ,CAACI,QAAD,EAAU,GAAV,EAAc,OAAd,EAAsB,CAAtB,EAAwB,CAAxB,CAAR;AAEA,SAAOA,QAAP;AACA","sourcesContent":["function createCell(i,j){\n\treturn {i:i,j:j,piece: null };\n}\n\nexport function createBoard(n){\n\tconst board={n:n,cells:[]};\n\tfor(let i=0;i<n;i++){\n\t\tfor(let j =0;j<n;j++){\n\t\t\tboard.cells.push(createCell(i,j));\n\t\t}\n\t}\n\tconst settedBoard = setupBoard(board);\n\treturn settedBoard;\n}\nfunction setPiece(board,type,color,i,j){\n\tconst cell= board.cells[i + j*board.n]\n\tcell.piece = {color:color,type:type}\n}\nfunction setupBoard(board){\n\tconst newBoard = board;\n\tsetPiece(newBoard,\"R\",\"black\",0,0);\n\tsetPiece(newBoard,\"N\",\"black\",0,1);\n\tsetPiece(newBoard,\"B\",\"black\",0,2);\n\tsetPiece(newBoard,\"Q\",\"black\",0,3);\n\tsetPiece(newBoard,\"K\",\"black\",0,4);\n\tsetPiece(newBoard,\"B\",\"black\",0,5);\n\tsetPiece(newBoard,\"N\",\"black\",0,6);\n\tsetPiece(newBoard,\"R\",\"black\",0,7);\n\tsetPiece(newBoard,\"P\",\"black\",1,0);\n\tsetPiece(newBoard,\"P\",\"black\",1,1);\n\tsetPiece(newBoard,\"P\",\"black\",1,2);\n\tsetPiece(newBoard,\"P\",\"black\",1,3);\n\tsetPiece(newBoard,\"P\",\"black\",1,4);\n\tsetPiece(newBoard,\"P\",\"black\",1,5);\n\tsetPiece(newBoard,\"P\",\"black\",1,6);\n\tsetPiece(newBoard,\"P\",\"black\",1,7);\t\n\t\n\tsetPiece(newBoard,\"R\",\"white\",7,0);\n\tsetPiece(newBoard,\"N\",\"white\",7,1);\n\tsetPiece(newBoard,\"B\",\"white\",7,2);\n\tsetPiece(newBoard,\"Q\",\"white\",7,3);\n\tsetPiece(newBoard,\"K\",\"white\",7,4);\n\tsetPiece(newBoard,\"B\",\"white\",7,5);\n\tsetPiece(newBoard,\"N\",\"white\",7,6);\n\tsetPiece(newBoard,\"R\",\"white\",7,7);\n\tsetPiece(newBoard,\"P\",\"white\",6,0);\n\tsetPiece(newBoard,\"P\",\"white\",6,1);\n\tsetPiece(newBoard,\"P\",\"white\",6,2);\n\tsetPiece(newBoard,\"P\",\"white\",6,3);\n\tsetPiece(newBoard,\"P\",\"white\",6,4);\n\tsetPiece(newBoard,\"P\",\"white\",6,5);\n\tsetPiece(newBoard,\"P\",\"white\",6,6);\n\tsetPiece(newBoard,\"P\",\"white\",6,7);\n\n\treturn newBoard;\n}\n"]},"metadata":{},"sourceType":"module"}