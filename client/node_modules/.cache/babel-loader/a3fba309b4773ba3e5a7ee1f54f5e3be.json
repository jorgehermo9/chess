{"ast":null,"code":"var _jsxFileName = \"/home/jorge/github/chess/src/components/Board/Cells/Cell.jsx\";\nimport React from \"react\";\nimport styles from \"./Cell.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cell(props) {\n  const perc = 100 / props.n;\n  const white = (props.pos.i + props.pos.j) % 2 === 0;\n  const cellStyle = {\n    width: `${perc}%`,\n    height: `${perc}%`,\n    backgroundColor: white ? \"#787878\" : \"#2b2b2b\"\n  };\n  const type = props.piece ? props.piece.type : \"\";\n  const pieceStyle = props.piece ? {\n    borderColor: `${props.piece.color === \"white\" ? \"white\" : \"black\"}`,\n    borderWidth: \"0.2vmax\",\n    borderStyle: \"solid\",\n    color: props.piece.color === \"white\" ? \"white\" : \"black\"\n  } : null;\n  console.log(\"hola\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.cell}`,\n    style: cellStyle,\n    id: `cell${props.pos.i}${props.pos.j}`,\n    onClick: () => props.onSelected({\n      pos: props.pos,\n      piece: props.piece\n    }),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.validMove ? styles.validMove : styles.notValidMove,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.piece,\n        style: pieceStyle,\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Cell;\nexport default Cell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/home/jorge/github/chess/src/components/Board/Cells/Cell.jsx"],"names":["React","styles","Cell","props","perc","n","white","pos","i","j","cellStyle","width","height","backgroundColor","type","piece","pieceStyle","borderColor","color","borderWidth","borderStyle","console","log","cell","onSelected","validMove","notValidMove"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AACnB,QAAMC,IAAI,GAAG,MAAID,KAAK,CAACE,CAAvB;AACA,QAAMC,KAAK,GAAG,CAACH,KAAK,CAACI,GAAN,CAAUC,CAAV,GAAYL,KAAK,CAACI,GAAN,CAAUE,CAAvB,IAA4B,CAA5B,KAAkC,CAAhD;AACA,QAAMC,SAAS,GAAC;AACfC,IAAAA,KAAK,EAAG,GAAEP,IAAK,GADA;AAEfQ,IAAAA,MAAM,EAAG,GAAER,IAAK,GAFD;AAGfS,IAAAA,eAAe,EAAEP,KAAK,GAAC,SAAD,GAAW;AAHlB,GAAhB;AAMA,QAAMQ,IAAI,GAAGX,KAAK,CAACY,KAAN,GAAaZ,KAAK,CAACY,KAAN,CAAYD,IAAzB,GAA8B,EAA3C;AACA,QAAME,UAAU,GAAGb,KAAK,CAACY,KAAN,GAAY;AAC9BE,IAAAA,WAAW,EAAG,GAAEd,KAAK,CAACY,KAAN,CAAYG,KAAZ,KAAoB,OAApB,GAA4B,OAA5B,GAAoC,OAAQ,EAD9B;AAE9BC,IAAAA,WAAW,EAAE,SAFiB;AAG9BC,IAAAA,WAAW,EAAE,OAHiB;AAI9BF,IAAAA,KAAK,EAAEf,KAAK,CAACY,KAAN,CAAYG,KAAZ,KAAoB,OAApB,GAA4B,OAA5B,GAAoC;AAJb,GAAZ,GAKjB,IALF;AAMCG,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,sBACC;AAAK,IAAA,SAAS,EAAG,GAAErB,MAAM,CAACsB,IAAK,EAA/B;AACA,IAAA,KAAK,EAAEb,SADP;AAEA,IAAA,EAAE,EAAG,OAAMP,KAAK,CAACI,GAAN,CAAUC,CAAE,GAAEL,KAAK,CAACI,GAAN,CAAUE,CAAE,EAFrC;AAGA,IAAA,OAAO,EACN,MAAIN,KAAK,CAACqB,UAAN,CAAiB;AAACjB,MAAAA,GAAG,EAACJ,KAAK,CAACI,GAAX;AAAeQ,MAAAA,KAAK,EAACZ,KAAK,CAACY;AAA3B,KAAjB,CAJL;AAAA,2BAMC;AAAK,MAAA,SAAS,EAAEZ,KAAK,CAACsB,SAAN,GAAgBxB,MAAM,CAACwB,SAAvB,GAAiCxB,MAAM,CAACyB,YAAxD;AAAA,6BACC;AAAM,QAAA,SAAS,EAAEzB,MAAM,CAACc,KAAxB;AAA+B,QAAA,KAAK,EAAEC,UAAtC;AAAA,kBACEF;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAND;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;KA/BQZ,I;AAkCT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./Cell.module.css\"\n\nfunction Cell(props){\n\tconst perc = 100/props.n;\n\tconst white = (props.pos.i+props.pos.j) % 2 === 0;\n\tconst cellStyle={\n\t\twidth: `${perc}%`,\n\t\theight: `${perc}%`,\n\t\tbackgroundColor: white?\"#787878\":\"#2b2b2b\",\n\t}\n\n\tconst type = props.piece? props.piece.type:\"\";\n\tconst pieceStyle = props.piece?{\n\t\tborderColor: `${props.piece.color===\"white\"?\"white\":\"black\"}`,\n\t\tborderWidth: \"0.2vmax\",\n\t\tborderStyle: \"solid\",\n\t\tcolor: props.piece.color===\"white\"?\"white\":\"black\"}\n\t\t:null\n\t\tconsole.log(\"hola\");\n\treturn(\n\t\t<div className={`${styles.cell}`}\n\t\tstyle={cellStyle}\n\t\tid={`cell${props.pos.i}${props.pos.j}`}\n\t\tonClick={\n\t\t\t()=>props.onSelected({pos:props.pos,piece:props.piece})}\n\t\t\t>\n\t\t\t<div className={props.validMove?styles.validMove:styles.notValidMove}>\n\t\t\t\t<span className={styles.piece} style={pieceStyle}>\n\t\t\t\t\t{type}\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n\n\nexport default Cell;"]},"metadata":{},"sourceType":"module"}